{"ast":null,"code":"import store from \"../redux/store\";\nexport const CAMPAIGN_COUNT = \"CAMPAIGN_COUNT\"; // action type\n// action creator (dispatch sends this to redux reducer)\n\nfunction campaignCount(data) {\n  return {\n    type: CAMPAIGN_COUNT,\n    payload: data\n  };\n} //\n//  set up the blockchain shadow contract, user address, and user campaign count.  Put into redux store.\n//\n\n\nasync function getCampaignCount(CZ, userAddress) {\n  // get number of campaigns owned by the user account\n  let userCampaignCount = +(await CZ.balanceOf(userAddress)); // + convert a string to an integer\n\n  let totalCampaignCount = +(await CZ.totalSupply()); // do a binary search to estimate total campaign count.\n  // It is a real shame that the Cryptocampaigns contract doesn't totally comply with ERC720 to include a function\n  // that returns totalCampaignount.\n  // var high = 8192;\n  // var low = 0;\n  // var middle = 4096;\n  // while (low < high) {\n  //     try {\n  //     await CZ.campaigns(middle);\n  //     low = middle + 1;\n  //     middle = Math.floor(low + (high - low) / 2);\n  //   } catch {\n  //     high = middle - 1;\n  //     middle = Math.floor(low + (high - low) / 2);\n  //   }\n  // }\n  // put state data into the REDUX store for easy access from other pages and components\n\n  let data = {\n    totalCampaignCount: totalCampaignCount,\n    //Math.max(low-1, 1),   // from binary search\n    userCampaignCount //EC7 shorthand for totalCampaignCount:totalCampaignCount because of same variable name\n\n  };\n  store.dispatch(campaignCount(data));\n}\n\nexport default getCampaignCount;","map":{"version":3,"sources":["/home/moose970/Documents/workspace/Classes/CS458Blockchain/BlockStarter/blockStarterDapp/src/utils/getCampaignCount.js"],"names":["store","CAMPAIGN_COUNT","campaignCount","data","type","payload","getCampaignCount","CZ","userAddress","userCampaignCount","balanceOf","totalCampaignCount","totalSupply","dispatch"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,gBAAlB;AAEA,OAAO,MAAMC,cAAc,GAAG,gBAAvB,C,CAAyC;AAEhD;;AACA,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AAC3B,SAAO;AACLC,IAAAA,IAAI,EAAEH,cADD;AAELI,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,C,CAED;AACA;AACA;;;AAEA,eAAeG,gBAAf,CAAgCC,EAAhC,EAAoCC,WAApC,EAAiD;AAC/C;AACA,MAAIC,iBAAiB,GAAG,EAAE,MAAMF,EAAE,CAACG,SAAH,CAAaF,WAAb,CAAR,CAAxB,CAF+C,CAEc;;AAC7D,MAAIG,kBAAkB,GAAG,EAAE,MAAMJ,EAAE,CAACK,WAAH,EAAR,CAAzB,CAH+C,CAK/C;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAIT,IAAI,GAAG;AACTQ,IAAAA,kBAAkB,EAAEA,kBADX;AAC+B;AACxCF,IAAAA,iBAFS,CAEkB;;AAFlB,GAAX;AAKAT,EAAAA,KAAK,CAACa,QAAN,CAAeX,aAAa,CAACC,IAAD,CAA5B;AACD;;AAED,eAAeG,gBAAf","sourcesContent":["import store from \"../redux/store\";\n\nexport const CAMPAIGN_COUNT = \"CAMPAIGN_COUNT\"; // action type\n\n// action creator (dispatch sends this to redux reducer)\nfunction campaignCount(data) {\n  return {\n    type: CAMPAIGN_COUNT,\n    payload: data\n  };\n}\n\n//\n//  set up the blockchain shadow contract, user address, and user campaign count.  Put into redux store.\n//\n\nasync function getCampaignCount(CZ, userAddress) {\n  // get number of campaigns owned by the user account\n  let userCampaignCount = +(await CZ.balanceOf(userAddress));  // + convert a string to an integer\n  let totalCampaignCount = +(await CZ.totalSupply());\n\n  // do a binary search to estimate total campaign count.\n  // It is a real shame that the Cryptocampaigns contract doesn't totally comply with ERC720 to include a function\n  // that returns totalCampaignount.\n\n  // var high = 8192;\n  // var low = 0;\n  // var middle = 4096;\n\n  // while (low < high) {\n  //     try {\n  //     await CZ.campaigns(middle);\n  //     low = middle + 1;\n  //     middle = Math.floor(low + (high - low) / 2);\n  //   } catch {\n  //     high = middle - 1;\n  //     middle = Math.floor(low + (high - low) / 2);\n  //   }\n  // }\n\n  // put state data into the REDUX store for easy access from other pages and components\n\n  let data = {\n    totalCampaignCount: totalCampaignCount, //Math.max(low-1, 1),   // from binary search\n    userCampaignCount          //EC7 shorthand for totalCampaignCount:totalCampaignCount because of same variable name\n  };\n\n  store.dispatch(campaignCount(data));\n}\n\nexport default getCampaignCount;"]},"metadata":{},"sourceType":"module"}