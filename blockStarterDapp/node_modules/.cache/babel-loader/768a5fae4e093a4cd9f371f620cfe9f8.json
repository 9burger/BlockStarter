{"ast":null,"code":"var _jsxFileName = \"/home/moose970/Documents/workspace/Classes/CS458Blockchain/BlockStarter/blockStarterDapp/src/components/campaignCard.js\";\nimport React, { Component } from \"react\";\nimport { Icon, Card, Header, Modal, Button } from \"semantic-ui-react\";\nimport ReactTooltip from \"react-tooltip\";\nimport ActionButton from \"./ActionButton\";\nimport campaignCardContent from \"./campaignCardContent\";\n\nclass campaignCard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modalOpen: false\n    };\n\n    this.handleClose = () => this.setState({\n      modalOpen: false\n    });\n\n    this.truncate = (text, startChars, endChars) => {\n      if (text.length > 12) {\n        var start = text.substring(0, startChars);\n        var end = text.substring(text.length - endChars, text.length);\n        return start + \"...\" + end;\n      }\n\n      return text;\n    };\n  }\n\n  modalOpen() {\n    this.setState({\n      modalOpen: true\n    });\n  }\n\n  render() {\n    // define the button labels used in <ActionButton> further on down in the code\n    const attackButton = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \" \", \"Attack campaign \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }), \" (70% chance of winning)\", \" \");\n    const Transfercampaign = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, \" \", \"Transfer campaign \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }), \" (to a new owner)\", \" \");\n    const kittyButton = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Eat CryptoKitty \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), \" (burp!)\", \" \");\n    const changeNameButton = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Change Name \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), \" (level > 2)\", \" \");\n    const levelUpButton = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Level Up\", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), \" (cost = .001 eth)\", \" \"); // create the JSX depending on whether you own the campaign or not\n\n    if (this.props.myOwner) // Owner campaign: render card and tooltip and modal for campaign actions\n      return React.createElement(Card, {\n        style: {\n          backgroundColor: \"LightYellow\"\n        },\n        raised: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(ReactTooltip, {\n        delayShow: 400,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(\"a\", {\n        href: \"javascript:;\",\n        \"data-tip\": \"Click on me to view actions for this campaign\",\n        onClick: e => this.modalOpen(e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"campaignCardContent\", {\n        campaign: this.props,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      })), React.createElement(Modal, {\n        open: this.state.modalOpen,\n        onClose: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Header, {\n        icon: \"browser\",\n        content: \"These are the actions you can take with your campaign!\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(Modal.Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(ActionButton, {\n        pathname: \"/Attackcampaign\",\n        buttonLabel: attackButton,\n        data: this.props,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(ActionButton, {\n        pathname: \"/FeedOnKitty\",\n        buttonLabel: kittyButton,\n        data: this.props,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(ActionButton, {\n        pathname: \"/Transfercampaign\",\n        buttonLabel: Transfercampaign,\n        data: this.props,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(ActionButton, {\n        pathname: \"/ChangeName\",\n        buttonLabel: changeNameButton,\n        disableMe: this.props.campaignLevel <= 2,\n        data: this.props,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(ActionButton, {\n        pathname: \"/LevelUp\",\n        buttonLabel: levelUpButton,\n        data: this.props,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      })), React.createElement(Modal.Actions, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"red\",\n        onClick: this.handleClose,\n        inverted: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"cancel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), \" Close\")))); // someone else's campaign.  just show the card.\n    else return React.createElement(Card, {\n        style: {\n          backgroundColor: \"LavenderBlush\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"campaignCardContent\", {\n        campaign: this.props,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }));\n  }\n\n}\n\nexport default campaignCard;","map":{"version":3,"sources":["/home/moose970/Documents/workspace/Classes/CS458Blockchain/BlockStarter/blockStarterDapp/src/components/campaignCard.js"],"names":["React","Component","Icon","Card","Header","Modal","Button","ReactTooltip","ActionButton","campaignCardContent","campaignCard","state","modalOpen","handleClose","setState","truncate","text","startChars","endChars","length","start","substring","end","render","attackButton","Transfercampaign","kittyButton","changeNameButton","levelUpButton","props","myOwner","backgroundColor","e","campaignLevel"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Icon, Card, Header, Modal, Button } from \"semantic-ui-react\";\nimport ReactTooltip from \"react-tooltip\";\nimport ActionButton from \"./ActionButton\";\nimport campaignCardContent from \"./campaignCardContent\";\n\nclass campaignCard extends Component {\n  state = {\n    modalOpen: false\n  };\n\n  modalOpen() {\n    this.setState({ modalOpen: true });\n  }\n\n  handleClose = () => this.setState({ modalOpen: false });\n\n  truncate = (text, startChars, endChars) => {\n    if (text.length > 12) {\n      var start = text.substring(0, startChars);\n      var end = text.substring(text.length - endChars, text.length);\n      return start + \"...\" + end;\n    }\n    return text;\n  };\n\n  render() {\n    // define the button labels used in <ActionButton> further on down in the code\n\n    const attackButton = (\n      <div>\n        {\" \"}\n        Attack campaign <br /> (70% chance of winning){\" \"}\n      </div>\n    ); const Transfercampaign = (\n      <div>\n        {\" \"}\n        Transfer campaign <br /> (to a new owner){\" \"}\n      </div>\n    );\n    const kittyButton = (\n      <div>\n        Eat CryptoKitty <br /> (burp!){\" \"}\n      </div>\n    );\n    const changeNameButton = (\n      <div>\n        Change Name <br /> (level > 2){\" \"}\n      </div>\n    );\n    const levelUpButton = (\n      <div>\n        Level Up\n        <br /> (cost = .001 eth){\" \"}\n      </div>\n    );\n\n    // create the JSX depending on whether you own the campaign or not\n\n    if (this.props.myOwner)\n      // Owner campaign: render card and tooltip and modal for campaign actions\n\n      return (\n        <Card style={{ backgroundColor: \"LightYellow\" }} raised>\n          <ReactTooltip delayShow={400} />\n\n          <a\n            href=\"javascript:;\"\n            data-tip=\"Click on me to view actions for this campaign\"\n            onClick={e => this.modalOpen(e)}\n          >\n            <campaignCardContent campaign={this.props} />\n          </a>\n\n          {/* a modal is like an \"alert\", it's a popup that greys out the lower screen and displays its content on top of everything */}\n\n          <Modal open={this.state.modalOpen} onClose={this.handleClose}>\n            <Header\n              icon=\"browser\"\n              content=\"These are the actions you can take with your campaign!\"\n            />\n\n            <Modal.Content>\n              <ActionButton\n                pathname=\"/Attackcampaign\"\n                buttonLabel={attackButton}\n                data={this.props}\n              />\n\n              <ActionButton\n                pathname=\"/FeedOnKitty\"\n                buttonLabel={kittyButton}\n                data={this.props}\n              />\n              <ActionButton\n              pathname=\"/Transfercampaign\"\n              buttonLabel={Transfercampaign}\n              data={this.props}\n            />\n\n              <ActionButton\n                pathname=\"/ChangeName\"\n                buttonLabel={changeNameButton}\n                disableMe={this.props.campaignLevel <= 2}\n                data={this.props}\n              />\n\n              <ActionButton\n                pathname=\"/LevelUp\"\n                buttonLabel={levelUpButton}\n                data={this.props}\n              />\n\n            </Modal.Content>\n\n            <Modal.Actions>\n              <Button color=\"red\" onClick={this.handleClose} inverted>\n                <Icon name=\"cancel\" /> Close\n              </Button>\n            </Modal.Actions>\n          </Modal>\n        </Card>\n      );\n    // someone else's campaign.  just show the card.\n    else\n      return (\n        <Card style={{ backgroundColor: \"LavenderBlush\" }}>\n          <campaignCardContent campaign={this.props} />\n        </Card>\n      );\n  }\n}\n\nexport default campaignCard;\n"]},"metadata":{},"sourceType":"module"}